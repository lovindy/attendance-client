import { baseApi } from './baseApi';

// Create an API slice specifically for classes using RTK Query's injectEndpoints method
export const classesApi = baseApi.injectEndpoints({
  endpoints: (builder) => ({
    // Fetch all classes
    fetchClasses: builder.query({
      query: () => '/classes',
      providesTags: ['Classes'],
    }),

    // Create a new class
    createClass: builder.mutation({
      query: (classData) => ({
        url: '/classes',
        method: 'POST',
        body: classData,
      }),
    }),

    // Fetch a single class by id
    fetchClass: builder.query({
      query: (classId) => `/classes/${classId}`,
      providesTags: ['Classes'],
    }),

    // Update a class by id
    updateClass: builder.mutation({
      query: ({ classId, classData }) => ({
        url: `/classes/${classId}`,
        method: 'PUT',
        body: classData,
      }),
    }),

    // Delete a class by id
    deleteClass: builder.mutation({
      query: (classId) => ({
        url: `/classes/${classId}`,
        method: 'DELETE',
      }),
    }),
  }),
  overrideExisting: false, // If you want to prevent overwriting existing endpoints globally
});

// Export the hooks generated by RTK Query for usage in components
export const {
  useFetchClassQuery,
  useFetchClassesQuery,
  useCreateClassMutation,
  useUpdateClassMutation,
  useDeleteClassMutation,
} = classesApi;
